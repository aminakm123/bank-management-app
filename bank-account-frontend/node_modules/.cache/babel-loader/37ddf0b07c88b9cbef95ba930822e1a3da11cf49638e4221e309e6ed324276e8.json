{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/Task - Code Sherpas Team/bank-account-frontend/src/components/AccountDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./AccountDashboard.css\"; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:8000';\nconst AccountDashboard = () => {\n  _s();\n  const [accounts, setAccounts] = useState([]);\n  const [selectedAccount, setSelectedAccount] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [targetAccountNumber, setTargetAccountNumber] = useState(\"\");\n  const [actionType, setActionType] = useState(null);\n  useEffect(() => {\n    axios.get(\"/\").then(response => {\n      console.log(response.data); // Log the response data\n      setAccounts(response.data);\n    }).catch(error => console.error(\"Error fetching accounts:\", error));\n  }, []);\n  const handleAction = action => {\n    setActionType(action);\n    setTargetAccountNumber(\"\"); // Clear target account for non-transfer actions\n  };\n  const performAction = () => {\n    if (!selectedAccount || !amount || actionType === \"transfer\" && !targetAccountNumber) {\n      alert(\"Please fill in all required fields.\");\n      return;\n    }\n    let url = \"\";\n    let data = {\n      amount: parseFloat(amount)\n    };\n    if (actionType === \"deposit\") {\n      url = `/${selectedAccount}/deposit/`;\n    } else if (actionType === \"withdraw\") {\n      url = `/${selectedAccount}/withdraw/`;\n    } else if (actionType === \"transfer\") {\n      url = `/${selectedAccount}/transfer/`;\n      data = {\n        ...data,\n        target_account_number: targetAccountNumber\n      };\n    }\n    axios.post(url, data).then(response => {\n      alert(response.data.status);\n      setAmount(\"\"); // Clear the amount input field\n      setTargetAccountNumber(\"\"); // Clear the target account input field\n      setActionType(null); // Reset action type\n      setSelectedAccount(\"\"); // Clear selected account\n    }).catch(error => console.error(`Error performing ${actionType}:`, error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Banking Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAction(\"deposit\"),\n          className: \"action-button\",\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAction(\"withdraw\"),\n          className: \"action-button\",\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAction(\"transfer\"),\n          className: \"action-button\",\n          children: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), actionType && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedAccount,\n          onChange: e => setSelectedAccount(e.target.value),\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: account.account_number,\n            children: [\"Account: \", account.account_number, \" - Balance: \", account.balance]\n          }, account.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          placeholder: \"Amount\",\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), actionType === \"transfer\" && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: targetAccountNumber,\n          onChange: e => setTargetAccountNumber(e.target.value),\n          placeholder: \"Target Account Number\",\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: performAction,\n          className: \"action-button\",\n          children: [\"Confirm \", actionType.charAt(0).toUpperCase() + actionType.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(AccountDashboard, \"nhcP7nNle1P7mSTLmqhEIDh8yvc=\");\n_c = AccountDashboard;\nexport default AccountDashboard;\nvar _c;\n$RefreshReg$(_c, \"AccountDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","defaults","baseURL","AccountDashboard","_s","accounts","setAccounts","selectedAccount","setSelectedAccount","amount","setAmount","targetAccountNumber","setTargetAccountNumber","actionType","setActionType","get","then","response","console","log","data","catch","error","handleAction","action","performAction","alert","url","parseFloat","target_account_number","post","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","disabled","map","account","account_number","balance","id","type","placeholder","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["/home/user/Documents/Task - Code Sherpas Team/bank-account-frontend/src/components/AccountDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./AccountDashboard.css\"; // Import the CSS file\n\naxios.defaults.baseURL = 'http://localhost:8000';\n\nconst AccountDashboard = () => {\n    const [accounts, setAccounts] = useState([]);\n    const [selectedAccount, setSelectedAccount] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const [targetAccountNumber, setTargetAccountNumber] = useState(\"\");\n    const [actionType, setActionType] = useState(null);\n\n    useEffect(() => {\n        axios.get(\"/\")\n            .then((response) => {\n                console.log(response.data); // Log the response data\n                setAccounts(response.data);\n            })\n            .catch((error) => console.error(\"Error fetching accounts:\", error));\n    }, []);\n    \n\n    const handleAction = (action) => {\n        setActionType(action);\n        setTargetAccountNumber(\"\"); // Clear target account for non-transfer actions\n    };\n\n    const performAction = () => {\n        if (!selectedAccount || !amount || (actionType === \"transfer\" && !targetAccountNumber)) {\n            alert(\"Please fill in all required fields.\");\n            return;\n        }\n\n        let url = \"\";\n        let data = { amount: parseFloat(amount) };\n\n        if (actionType === \"deposit\") {\n            url = `/${selectedAccount}/deposit/`;\n        } else if (actionType === \"withdraw\") {\n            url = `/${selectedAccount}/withdraw/`;\n        } else if (actionType === \"transfer\") {\n            url = `/${selectedAccount}/transfer/`;\n            data = { ...data, target_account_number: targetAccountNumber };\n        }\n\n        axios\n            .post(url, data)\n            .then((response) => {\n                alert(response.data.status);\n                setAmount(\"\"); // Clear the amount input field\n                setTargetAccountNumber(\"\"); // Clear the target account input field\n                setActionType(null); // Reset action type\n                setSelectedAccount(\"\"); // Clear selected account\n            })\n            .catch((error) => console.error(`Error performing ${actionType}:`, error));\n    };\n\n    return (\n        <div className=\"dashboard-container\">\n            <div className=\"actions\">\n                <h3>Banking Actions</h3>\n                <div className=\"action-buttons\">\n                    <button onClick={() => handleAction(\"deposit\")} className=\"action-button\">\n                        Deposit\n                    </button>\n                    <button onClick={() => handleAction(\"withdraw\")} className=\"action-button\">\n                        Withdraw\n                    </button>\n                    <button onClick={() => handleAction(\"transfer\")} className=\"action-button\">\n                        Transfer\n                    </button>\n                </div>\n\n                {actionType && (\n                    <div className=\"form-group\">\n                        <select\n                            value={selectedAccount}\n                            onChange={(e) => setSelectedAccount(e.target.value)}\n                            className=\"input-field\"\n                        >\n                            <option value=\"\" disabled>Select Account</option>\n                            {accounts.map((account) => (\n                                <option key={account.id} value={account.account_number}>\n                                    Account: {account.account_number} - Balance: {account.balance}\n                                </option>\n                            ))}\n\n                        </select>\n                        <input\n                            type=\"number\"\n                            value={amount}\n                            onChange={(e) => setAmount(e.target.value)}\n                            placeholder=\"Amount\"\n                            className=\"input-field\"\n                        />\n                        {actionType === \"transfer\" && (\n                            <input\n                                type=\"text\"\n                                value={targetAccountNumber}\n                                onChange={(e) => setTargetAccountNumber(e.target.value)}\n                                placeholder=\"Target Account Number\"\n                                className=\"input-field\"\n                            />\n                        )}\n                        <button onClick={performAction} className=\"action-button\">\n                            Confirm {actionType.charAt(0).toUpperCase() + actionType.slice(1)}\n                        </button>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default AccountDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}